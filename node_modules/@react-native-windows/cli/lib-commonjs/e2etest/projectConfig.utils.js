"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureWinUI3Project = exports.tryMkdir = exports.testProjectGuid = exports.templateRoot = void 0;
const fs = require("fs");
const path = require("path");
const generator_common_1 = require("../generator-common");
exports.templateRoot = path.resolve('../../../vnext/template');
exports.testProjectGuid = '{416476D5-974A-4EE2-8145-4E331297247E}';
async function tryMkdir(dir) {
    try {
        await fs.promises.mkdir(dir, { recursive: true });
    }
    catch (err) { }
}
exports.tryMkdir = tryMkdir;
async function ensureWinUI3Project(folder) {
    const windowsDir = path.join(folder, 'windows');
    if (fs.existsSync(windowsDir)) {
        await fs.promises.rmdir(windowsDir, { recursive: true });
    }
    await tryMkdir(windowsDir);
    const replacements = {
        name: 'WithWinUI3',
        namespace: 'WithWinUI3',
        useMustache: true,
        projectGuidUpper: exports.testProjectGuid,
        projectGuidLower: exports.testProjectGuid.toLowerCase(),
        useWinUI3: false,
        useHermes: false,
        packagesConfigCppNugetPackages: [
            {
                id: 'Microsoft.ReactNative.Cxx',
                version: '1.0.0',
                hasProps: false,
                hasTargets: true,
            },
            {
                id: 'Microsoft.UI.Xaml',
                version: '2.3.4.5',
                hasProps: false,
                hasTargets: false,
            },
            {
                id: 'Microsoft.WinUI',
                version: '3.2.1.0',
                hasProps: false,
                hasTargets: false,
            },
        ],
    };
    await generator_common_1.copyAndReplace(path.join(exports.templateRoot, 'cpp-app/proj/MyApp.sln'), path.join(windowsDir, 'WithWinUI3.sln'), replacements, null);
    const projDir = path.join(windowsDir, 'WithWinUI3');
    await tryMkdir(projDir);
    await generator_common_1.copyAndReplace(path.join(exports.templateRoot, 'cpp-app/proj/MyApp.vcxproj'), path.join(projDir, 'WithWinUI3.vcxproj'), replacements, null);
    await generator_common_1.copyAndReplace(path.join(exports.templateRoot, 'cpp-app/proj/packages.config'), path.join(projDir, 'packages.config'), replacements, null);
    await generator_common_1.copyAndReplace(path.join(exports.templateRoot, 'shared-app/proj/ExperimentalFeatures.props'), path.join(windowsDir, 'ExperimentalFeatures.props'), replacements, null);
}
exports.ensureWinUI3Project = ensureWinUI3Project;
//# sourceMappingURL=projectConfig.utils.js.map