{"version":3,"sources":["index.ts"],"names":["PermissionName","PermissionStatus","TwilioPhone","NativeModules","twilioPhoneEmitter","NativeEventEmitter","EventType"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;IAEYA,c;;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c;;IAMAC,gB;;;WAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,gCAAAA,gB;;AA6BZ,MAAMC,WAAW,GAAGC,2BAAcD,WAAlC;;AAEA,MAAME,kBAAkB,GAAG,IAAIC,+BAAJ,CAAuBF,2BAAcD,WAArC,CAA3B;;IAIYI,S;;;WAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,yBAAAA,S","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\nimport { RNTwilioPhone } from './RNTwilioPhone';\n\nexport enum PermissionName {\n  Record = 'RECORD', // iOS only\n  RecordAudio = 'RECORD_AUDIO', // Android only\n  CallPhone = 'CALL_PHONE', // Android only\n}\n\nexport enum PermissionStatus {\n  Granted = 'GRANTED',\n  Denied = 'DENIED',\n  Undetermined = 'UNDETERMINED', // iOS only\n  Unknown = 'UNKNOWN',\n}\n\nexport type MessagePayload = Record<string, string>;\nexport type ConnectParams = Record<string, string>;\nexport type Permissions = Record<PermissionName, PermissionStatus>;\n\ntype TwilioPhoneType = {\n  register(accessToken: string, deviceToken: string): void;\n  handleMessage(payload: MessagePayload): void;\n  acceptCallInvite(callSid: string): void;\n  rejectCallInvite(callSid: string): void;\n  disconnectCall(callSid: string): void;\n  endCall(callSid: string): void;\n  toggleMuteCall(callSid: string, mute: boolean): void;\n  toggleHoldCall(callSid: string, hold: boolean): void;\n  toggleSpeaker(speakerOn: boolean): void;\n  sendDigits(callSid: string, digits: string): void;\n  startCall(accessToken: string, params: ConnectParams): void;\n  unregister(accessToken: string, deviceToken: string): void;\n  activateAudio(): void; // iOS only\n  deactivateAudio(): void; // iOS only\n  checkPermissions(callback: (permissions: Permissions) => void): void;\n};\n\nconst TwilioPhone = NativeModules.TwilioPhone as TwilioPhoneType;\n\nconst twilioPhoneEmitter = new NativeEventEmitter(NativeModules.TwilioPhone);\n\nexport { RNTwilioPhone, TwilioPhone, twilioPhoneEmitter };\n\nexport enum EventType {\n  CallInvite = 'CallInvite',\n  CancelledCallInvite = 'CancelledCallInvite',\n  CallRinging = 'CallRinging',\n  CallConnectFailure = 'CallConnectFailure',\n  CallConnected = 'CallConnected',\n  CallReconnecting = 'CallReconnecting',\n  CallReconnected = 'CallReconnected',\n  CallDisconnected = 'CallDisconnected',\n  CallDisconnectedError = 'CallDisconnectedError',\n  RegistrationSuccess = 'RegistrationSuccess',\n  RegistrationFailure = 'RegistrationFailure',\n  UnregistrationSuccess = 'UnregistrationSuccess',\n  UnregistrationFailure = 'UnregistrationFailure',\n}\n"]}